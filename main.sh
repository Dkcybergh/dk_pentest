#!/bin/bash

# EthicalHackingLab - Automated Learning Environment Setup
# This script sets up a complete ethical hacking learning environment
# with resources, tools, and structured learning paths

# Color codes for better visibility
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color
BLUE='\033[0;34m'

# Base directories
BASE_DIR="$HOME/EthicalHackingLab"
TOOLS_DIR="$BASE_DIR/tools"
RESOURCES_DIR="$BASE_DIR/resources"
LABS_DIR="$BASE_DIR/labs"
PROGRESS_FILE="$BASE_DIR/.progress"

# Function to display script banner
display_banner() {
    clear
    echo -e "${RED}"
    echo "╔══════════════════════════════════════════════════════════════╗"
    echo "║                  Ethical Hacking Lab Setup                   ║"
    echo "║              Complete Learning Environment v1.0              ║ 
          ║                        by Dk Cyber                           ║
    echo "╚══════════════════════════════════════════════════════════════╝"
    echo -e "${NC}"
}

# Function to check if running as root
check_root() {
    if [ "$EUID" -ne 0 ]; then 
        echo -e "${RED}Please run as root${NC}"
        exit 1
    fi
}

# Function to create directory structure
create_directory_structure() {
    echo -e "${BLUE}Creating directory structure...${NC}"
    mkdir -p "$TOOLS_DIR" "$RESOURCES_DIR" "$LABS_DIR"
    mkdir -p "$RESOURCES_DIR"/{fundamentals,programming,networking,web_security,exploitation}
    mkdir -p "$LABS_DIR"/{basic,intermediate,advanced}
}

# Function to update system and install basic requirements
install_basic_requirements() {
    echo -e "${BLUE}Updating system and installing basic requirements...${NC}"
    apt update && apt upgrade -y
    apt install -y git python3 python3-pip curl wget virtualbox docker.io
    pip3 install -r requirements.txt
}

# Function to clone essential GitHub repositories
clone_essential_repos() {
    echo -e "${BLUE}Cloning essential repositories...${NC}"
    cd "$RESOURCES_DIR" || exit
    
    # Security Resources
    git clone https://github.com/swisskyrepo/PayloadsAllTheThings.git
    git clone https://github.com/danielmiessler/SecLists.git
    git clone https://github.com/OWASP/CheatSheetSeries.git
    
    # Training Materials
    git clone https://github.com/The-Art-of-Hacking/h4cker.git
    git clone https://github.com/enaqx/awesome-pentest.git
}

# Function to download and set up practice labs
setup_practice_labs() {
    echo -e "${BLUE}Setting up practice environments...${NC}"
    cd "$LABS_DIR" || exit
    
    # Download Metasploitable
    wget -P "$LABS_DIR/basic" https://sourceforge.net/projects/metasploitable/files/latest/download -O metasploitable.zip
    
    # Pull Docker images for vulnerable apps
    docker pull webgoat/webgoat-8.0
    docker pull vulnerables/web-dvwa
}

# Function to install common security tools
install_security_tools() {
    echo -e "${BLUE}Installing security tools...${NC}"
    apt install -y nmap wireshark burpsuite metasploit-framework
    apt install -y aircrack-ng john hydra sqlmap
    apt install -y gobuster dirbuster nikto
}

# Function to create learning roadmap
create_learning_roadmap() {
    echo -e "${BLUE}Creating learning roadmap...${NC}"
    cat > "$BASE_DIR/roadmap.md" << 'EOL'
# Ethical Hacking Learning Roadmap

## Module 1: Fundamentals
- Networking Basics
- Linux Fundamentals
- Basic Security Concepts

## Module 2: Reconnaissance
- Information Gathering
- OSINT Techniques
- Network Scanning

[... continues with all 35 modules ...]

EOL
}

# Function to track progress
init_progress_tracking() {
    echo -e "${BLUE}Initializing progress tracking...${NC}"
    echo "0" > "$PROGRESS_FILE"
    chmod 600 "$PROGRESS_FILE"
}

# Function to display main menu
show_menu() {
    while true; do
        display_banner
        echo -e "${GREEN}1.${NC} Start Learning Path"
        echo -e "${GREEN}2.${NC} Launch Practice Lab"
        echo -e "${GREEN}3.${NC} View Resources"
        echo -e "${GREEN}4.${NC} Check Progress"
        echo -e "${GREEN}5.${NC} Update Environment"
        echo -e "${GREEN}6.${NC} Exit"
        
        read -rp "Select an option: " choice
        case $choice in
            1) start_learning_path ;;
            2) launch_practice_lab ;;
            3) view_resources ;;
            4) check_progress ;;
            5) update_environment ;;
            6) exit 0 ;;
            *) echo -e "${RED}Invalid option${NC}" ;;
        esac
    done
}

# Function to start learning path
start_learning_path() {
    clear
    echo -e "${BLUE}Starting Learning Path...${NC}"
    # Implementation for structured learning path
    read -rp "Press Enter to continue..."
}

# Function to launch practice lab
launch_practice_lab() {
    clear
    echo -e "${BLUE}Launching Practice Lab...${NC}"
    # Implementation for launching labs
    read -rp "Press Enter to continue..."
}

# Function to view resources
view_resources() {
    clear
    echo -e "${BLUE}Available Resources:${NC}"
    tree "$RESOURCES_DIR"
    read -rp "Press Enter to continue..."
}

# Function to check progress
check_progress() {
    clear
    echo -e "${BLUE}Checking Progress...${NC}"
    # Implementation for progress tracking
    read -rp "Press Enter to continue..."
}

# Function to update environment
update_environment() {
    clear
    echo -e "${BLUE}Updating Environment...${NC}"
    apt update && apt upgrade -y
    # Update git repositories
    find "$RESOURCES_DIR" -type d -name .git -exec sh -c 'cd "{}"/../ && git pull' \;
    read -rp "Press Enter to continue..."
}

# Main function
main() {
    display_banner
    check_root
    create_directory_structure
    install_basic_requirements
    clone_essential_repos
    setup_practice_labs
    install_security_tools
    create_learning_roadmap
    init_progress_tracking
    show_menu
}

# Execute main function
main
